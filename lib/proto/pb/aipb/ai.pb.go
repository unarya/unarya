// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: ai.proto

package aipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AIAnalyzeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	CodeStructure string                 `protobuf:"bytes,2,opt,name=code_structure,json=codeStructure,proto3" json:"code_structure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIAnalyzeRequest) Reset() {
	*x = AIAnalyzeRequest{}
	mi := &file_ai_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIAnalyzeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIAnalyzeRequest) ProtoMessage() {}

func (x *AIAnalyzeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIAnalyzeRequest.ProtoReflect.Descriptor instead.
func (*AIAnalyzeRequest) Descriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{0}
}

func (x *AIAnalyzeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AIAnalyzeRequest) GetCodeStructure() string {
	if x != nil {
		return x.CodeStructure
	}
	return ""
}

type AIAnalyzeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Insights      string                 `protobuf:"bytes,1,opt,name=insights,proto3" json:"insights,omitempty"` // e.g., "Detected MVC pattern", "Possible logic flaw"
	Confidence    string                 `protobuf:"bytes,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIAnalyzeResponse) Reset() {
	*x = AIAnalyzeResponse{}
	mi := &file_ai_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIAnalyzeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIAnalyzeResponse) ProtoMessage() {}

func (x *AIAnalyzeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIAnalyzeResponse.ProtoReflect.Descriptor instead.
func (*AIAnalyzeResponse) Descriptor() ([]byte, []int) {
	return file_ai_proto_rawDescGZIP(), []int{1}
}

func (x *AIAnalyzeResponse) GetInsights() string {
	if x != nil {
		return x.Insights
	}
	return ""
}

func (x *AIAnalyzeResponse) GetConfidence() string {
	if x != nil {
		return x.Confidence
	}
	return ""
}

var File_ai_proto protoreflect.FileDescriptor

const file_ai_proto_rawDesc = "" +
	"\n" +
	"\bai.proto\x12\x04aipb\"U\n" +
	"\x10AIAnalyzeRequest\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12%\n" +
	"\x0ecode_structure\x18\x02 \x01(\tR\rcodeStructure\"O\n" +
	"\x11AIAnalyzeResponse\x12\x1a\n" +
	"\binsights\x18\x01 \x01(\tR\binsights\x12\x1e\n" +
	"\n" +
	"confidence\x18\x02 \x01(\tR\n" +
	"confidence2K\n" +
	"\tAIService\x12>\n" +
	"\vAnalyzeCode\x12\x16.aipb.AIAnalyzeRequest\x1a\x17.aipb.AIAnalyzeResponseB,Z*github.com/unarya/unarya/lib/proto/pb/aipbb\x06proto3"

var (
	file_ai_proto_rawDescOnce sync.Once
	file_ai_proto_rawDescData []byte
)

func file_ai_proto_rawDescGZIP() []byte {
	file_ai_proto_rawDescOnce.Do(func() {
		file_ai_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_proto_rawDesc), len(file_ai_proto_rawDesc)))
	})
	return file_ai_proto_rawDescData
}

var file_ai_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ai_proto_goTypes = []any{
	(*AIAnalyzeRequest)(nil),  // 0: aipb.AIAnalyzeRequest
	(*AIAnalyzeResponse)(nil), // 1: aipb.AIAnalyzeResponse
}
var file_ai_proto_depIdxs = []int32{
	0, // 0: aipb.AIService.AnalyzeCode:input_type -> aipb.AIAnalyzeRequest
	1, // 1: aipb.AIService.AnalyzeCode:output_type -> aipb.AIAnalyzeResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ai_proto_init() }
func file_ai_proto_init() {
	if File_ai_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_proto_rawDesc), len(file_ai_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_proto_goTypes,
		DependencyIndexes: file_ai_proto_depIdxs,
		MessageInfos:      file_ai_proto_msgTypes,
	}.Build()
	File_ai_proto = out.File
	file_ai_proto_goTypes = nil
	file_ai_proto_depIdxs = nil
}
