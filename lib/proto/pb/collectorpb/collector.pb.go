// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: collector.proto

package collectorpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Branch        string                 `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitRequest) Reset() {
	*x = GitRequest{}
	mi := &file_collector_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRequest) ProtoMessage() {}

func (x *GitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collector_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRequest.ProtoReflect.Descriptor instead.
func (*GitRequest) Descriptor() ([]byte, []int) {
	return file_collector_proto_rawDescGZIP(), []int{0}
}

func (x *GitRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GitRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *GitRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ArchiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveRequest) Reset() {
	*x = ArchiveRequest{}
	mi := &file_collector_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveRequest) ProtoMessage() {}

func (x *ArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collector_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveRequest.ProtoReflect.Descriptor instead.
func (*ArchiveRequest) Descriptor() ([]byte, []int) {
	return file_collector_proto_rawDescGZIP(), []int{1}
}

func (x *ArchiveRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type URLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URLRequest) Reset() {
	*x = URLRequest{}
	mi := &file_collector_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLRequest) ProtoMessage() {}

func (x *URLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collector_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLRequest.ProtoReflect.Descriptor instead.
func (*URLRequest) Descriptor() ([]byte, []int) {
	return file_collector_proto_rawDescGZIP(), []int{2}
}

func (x *URLRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ValidateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateRequest) Reset() {
	*x = ValidateRequest{}
	mi := &file_collector_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRequest) ProtoMessage() {}

func (x *ValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collector_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRequest.ProtoReflect.Descriptor instead.
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return file_collector_proto_rawDescGZIP(), []int{3}
}

func (x *ValidateRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ValidateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateResponse) Reset() {
	*x = ValidateResponse{}
	mi := &file_collector_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateResponse) ProtoMessage() {}

func (x *ValidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_collector_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateResponse.ProtoReflect.Descriptor instead.
func (*ValidateResponse) Descriptor() ([]byte, []int) {
	return file_collector_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CollectorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectorResponse) Reset() {
	*x = CollectorResponse{}
	mi := &file_collector_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorResponse) ProtoMessage() {}

func (x *CollectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_collector_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorResponse.ProtoReflect.Descriptor instead.
func (*CollectorResponse) Descriptor() ([]byte, []int) {
	return file_collector_proto_rawDescGZIP(), []int{5}
}

func (x *CollectorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CollectorResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_collector_proto protoreflect.FileDescriptor

const file_collector_proto_rawDesc = "" +
	"\n" +
	"\x0fcollector.proto\x12\vcollectorpb\"L\n" +
	"\n" +
	"GitRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06branch\x18\x02 \x01(\tR\x06branch\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"\"\n" +
	"\x0eArchiveRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\x1e\n" +
	"\n" +
	"URLRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"#\n" +
	"\x0fValidateRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"B\n" +
	"\x10ValidateResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"A\n" +
	"\x11CollectorResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path2\xca\x02\n" +
	"\x10CollectorService\x12I\n" +
	"\x0eCollectFromGit\x12\x17.collectorpb.GitRequest\x1a\x1e.collectorpb.CollectorResponse\x12Q\n" +
	"\x12CollectFromArchive\x12\x1b.collectorpb.ArchiveRequest\x1a\x1e.collectorpb.CollectorResponse\x12I\n" +
	"\x0eCollectFromURL\x12\x17.collectorpb.URLRequest\x1a\x1e.collectorpb.CollectorResponse\x12M\n" +
	"\x0eValidateSource\x12\x1c.collectorpb.ValidateRequest\x1a\x1d.collectorpb.ValidateResponseB3Z1github.com/unarya/unarya/lib/proto/pb/collectorpbb\x06proto3"

var (
	file_collector_proto_rawDescOnce sync.Once
	file_collector_proto_rawDescData []byte
)

func file_collector_proto_rawDescGZIP() []byte {
	file_collector_proto_rawDescOnce.Do(func() {
		file_collector_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_collector_proto_rawDesc), len(file_collector_proto_rawDesc)))
	})
	return file_collector_proto_rawDescData
}

var file_collector_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_collector_proto_goTypes = []any{
	(*GitRequest)(nil),        // 0: collectorpb.GitRequest
	(*ArchiveRequest)(nil),    // 1: collectorpb.ArchiveRequest
	(*URLRequest)(nil),        // 2: collectorpb.URLRequest
	(*ValidateRequest)(nil),   // 3: collectorpb.ValidateRequest
	(*ValidateResponse)(nil),  // 4: collectorpb.ValidateResponse
	(*CollectorResponse)(nil), // 5: collectorpb.CollectorResponse
}
var file_collector_proto_depIdxs = []int32{
	0, // 0: collectorpb.CollectorService.CollectFromGit:input_type -> collectorpb.GitRequest
	1, // 1: collectorpb.CollectorService.CollectFromArchive:input_type -> collectorpb.ArchiveRequest
	2, // 2: collectorpb.CollectorService.CollectFromURL:input_type -> collectorpb.URLRequest
	3, // 3: collectorpb.CollectorService.ValidateSource:input_type -> collectorpb.ValidateRequest
	5, // 4: collectorpb.CollectorService.CollectFromGit:output_type -> collectorpb.CollectorResponse
	5, // 5: collectorpb.CollectorService.CollectFromArchive:output_type -> collectorpb.CollectorResponse
	5, // 6: collectorpb.CollectorService.CollectFromURL:output_type -> collectorpb.CollectorResponse
	4, // 7: collectorpb.CollectorService.ValidateSource:output_type -> collectorpb.ValidateResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_collector_proto_init() }
func file_collector_proto_init() {
	if File_collector_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_collector_proto_rawDesc), len(file_collector_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_collector_proto_goTypes,
		DependencyIndexes: file_collector_proto_depIdxs,
		MessageInfos:      file_collector_proto_msgTypes,
	}.Build()
	File_collector_proto = out.File
	file_collector_proto_goTypes = nil
	file_collector_proto_depIdxs = nil
}
